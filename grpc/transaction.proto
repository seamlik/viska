// Models for database entries and the atomic chain of changes applied on them.

syntax = "proto3";

package viska.transaction;

import "google/protobuf/timestamp.proto";

// Change to a single database entry.
message Transaction {
  google.protobuf.Timestamp time = 1;
  Packet packet = 2;
}

// Content of a Transaction.
message Packet {
  Operation operation = 1;
  bytes key = 2;

  // Indicates which kind of database entry to delete.
  //
  // Present only when `operation` is `DELETE`.
  PayloadType type = 3;

  oneof payload {
    Message message = 10;
    Chatroom chatroom = 11;
    Peer peer = 12;
  }
}

enum Operation {
  DELETE = 0;
  ADD = 1;
}

enum PayloadType {
  CHATROOM = 0;
  MESSAGE = 1;
  PEER = 2;
}

message Message {
  bytes content = 1;
  string mime = 2;
  bytes sender = 3;
  google.protobuf.Timestamp time = 4;
  repeated bytes recipients = 5;

  // Message ID which is a UUID.
  bytes id = 6;
}

// Chatroom.
message Chatroom {
  // Custom name given by the user.
  string name = 1;

  repeated bytes members = 2;
}

// Peer.
//
// Account ID is indicated in the `key` field of a `Packet`.
message Peer {
  // Custom name given by the user.
  string name = 1;

  PeerRole role = 2;
}

// Peer role.
enum PeerRole {
  // Will be denied upon TLS connection.
  BLOCKED = 0;

  // Will be allowed for all interaction between peers.
  FRIEND = 1;
}

// Account ID.
message AccountId {
  bytes content = 1;
}